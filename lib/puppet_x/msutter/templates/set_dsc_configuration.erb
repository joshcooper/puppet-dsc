$ErrorActionPreference = "Stop"
$PuppetModulesFolder = Join-Path $env:ProgramFiles 'WindowsPowerShell\Modules\PuppetVendoredModules'
if (!(Test-Path($PuppetModulesFolder))) {
    & cmd.exe /c mklink /d "$PuppetModulesFolder" "<%= vendored_modules_path %>" | Out-Null
}

$ConfigOutputPath = [IO.Path]::GetTempPath()

configuration PuppetConfiguration
{
<% if resource.parameters[:dscmeta_module_name] && resource[:dscmeta_import_resource] -%>
<%  if resource[:dscmeta_module_name].downcase == 'psdesiredstateconfiguration' -%>
    Import-DscResource -ModuleName <%= resource[:dscmeta_module_name] %>
<%  else -%>
    Import-DscResource -ModuleName @{<%= "ModuleName=\"#{resource[:dscmeta_module_name]}\"" %><%= "; ModuleVersion=\"#{resource[:dscmeta_module_version]}\"" if resource.parameters[:dscmeta_module_version] %>}
<%  end -%>
<% end -%>

    node "localhost"
    {
        <%= resource[:dscmeta_resource_friendly_name] %> "<%= resource.title %>"
        {
<% dsc_parameters.each do |p| -%>
           <%= p.name.to_s.gsub(/^dsc_/,'') %> = <%= format_dsc_value(p.value) %>
<% end -%>
        }
    }
}

Remove-Item "$ConfigOutputPath\*.mof" -Force | out-null
PuppetConfiguration -OutputPath "$ConfigOutputPath" | out-null
$set_return = Start-DscConfiguration -Path "$ConfigOutputPath" -Wait -Verbose

return $set_return
